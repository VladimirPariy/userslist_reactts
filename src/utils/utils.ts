import {IUser} from "../types/IUser";export const firstPhone = (phone: string): string => {  const indexStartBySecondPhone = phone.indexOf('x')  if (indexStartBySecondPhone !== -1) {    return phone.slice(0, indexStartBySecondPhone - 1)  }  return phone}export const normalizingSecondPhone = (phoneNum: string): string => {  const indexByLastHyphen = phoneNum.lastIndexOf('-')  if ((phoneNum.length - indexByLastHyphen) > 4) {    return `${phoneNum.slice(0, phoneNum.length - 4)}-${phoneNum.slice(phoneNum.length - 4)}`  }  return phoneNum}export const secondPhone = (phone: string): string | boolean => {  const indexStartBySecondPhone = phone.indexOf('x')  if (indexStartBySecondPhone !== -1) {    const counterForDelete = phone.slice(indexStartBySecondPhone + 1).length    const firstPartOfPhoneNumber = phone.slice(0, indexStartBySecondPhone - (counterForDelete + 2))    const secondPartOfPhoneNumber = phone.slice(indexStartBySecondPhone + 1)    const secondPhone = `${firstPartOfPhoneNumber}${secondPartOfPhoneNumber}`    return normalizingSecondPhone(secondPhone)  }  return false;}export const filteringUserByPage = (page: number, users: IUser[]) => {  const numericalArray: number[][] = [    [0, 1, 2, 3], [4, 5, 6, 7], [8, 9]  ]  let arr = [] as IUser[]  for (let i = numericalArray[page][0]; i <= numericalArray[page][numericalArray[page].length - 1]; i++) {    if (users && users[i]) {      arr.push(users[i])    }  }  return arr}