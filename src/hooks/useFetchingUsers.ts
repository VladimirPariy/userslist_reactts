import * as api from "../api/api";import {IUser} from "../types/IUser";import {useEffect, useState} from "react";import {useFetch} from "./useFetch";export const useFetchingUsers = () => {  const [users, setUsers] = useState<IUser[]>([])  const [errorUsers, setErrorUsers] = useState(null)  const [isUsersLoading, setIsUsersLoading] = useState<boolean>(false)  const {value, error, isLoading, fetchingValue} = useFetch()  useEffect(() => {    fetchingValue(api.queryURLByUser())  }, [])  useEffect(() => {    setUsers(value)    setErrorUsers(error)    setIsUsersLoading(isLoading)  }, [value, error, isLoading])  return {users, isUsersLoading, errorUsers}}