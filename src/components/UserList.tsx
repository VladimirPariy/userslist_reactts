import React, {Dispatch, FC, SetStateAction} from "react";import styles from '../styles/UsersList.module.scss'import UserItem from "./UserItem";import {IUser} from "../types/IUser";import Loading from "./UI/Loading";import Error from "./UI/Error";import EmptyList from "./UI/EmptyList";interface Props {  visibleUsers: IUser[];  clickHandler: (id: string) => void;  setVisiblePosts: Dispatch<SetStateAction<boolean>>;  isLoading: boolean;  error: string | null;  visiblePosts: boolean;}const UserList: FC<Props> = (props) => {  const stylesForContainer = !props.visiblePosts ? [styles['usersContainer']].join(' ') : [styles['usersContainer'], styles['postVisible']].join(' ')  console.log(props.visibleUsers)  return (    <div className={stylesForContainer}>      {props.visibleUsers?.map(user => (        <UserItem key={user.id} clickHandler={props.clickHandler} setVisiblePosts={props.setVisiblePosts}  {...user}/>      ))}      {props.visibleUsers.length === 0 && <EmptyList/>}      {props.isLoading &&        <Loading/>}      {props.error &&        <Error children={props.error}/>}    </div>  );};export default UserList;