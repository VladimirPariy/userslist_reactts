import React, {FC, useState} from "react";import styles from "../styles/Content.module.scss";import UserList from "./UserList";import {IUser} from "../types/IUser";import UserPostsList from "./UserPostsList";import {useFetchingPosts} from "../hooks/useFetchingPosts";import * as api from "../api/api";interface Props {  isLoading: boolean;  visibleUsers: IUser[];  error: string | null;}const Content: FC<Props> = ({isLoading: isUserLoading, error: userError, visibleUsers}) => {  const [visiblePosts, setVisiblePosts] = useState(false)  const {posts, postsError, isPostsLoading, fetchingValue} = useFetchingPosts()  const clickHandler = (id: string) => {    fetchingValue(api.queryURLByUserPosts(id))  }  return (    <section className={styles.contentWrapper}>      {visibleUsers &&        <UserList visibleUsers={visibleUsers}                  clickHandler={clickHandler}                  setVisiblePosts={setVisiblePosts}                  isLoading={isUserLoading}                  error={userError}                  visiblePosts={visiblePosts}/>}      {visiblePosts &&        <UserPostsList posts={posts}                       isPostsLoading={isPostsLoading}                       postsError={postsError}                       setVisiblePosts={setVisiblePosts}/>}    </section>  );};export default Content;